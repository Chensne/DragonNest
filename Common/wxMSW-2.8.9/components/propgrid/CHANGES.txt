

Version 1.3.4 ( May-17-2008 )

  New Features (compared to the previous 1.3.x release):

  - Added ability to save and restore user-editable state
    (selection, scroll position, and set of expanded
    properties). Use SaveEditableState() and RestoreEditableState().
    Included is functionality to save and load state in
    a wxString.

  - Added wxPropertyGrid methods SetEmptySpaceColour() and
    GetEmptySpaceColour().

  - Added methods to wxPGChoices for directly adding items
    with bitmap.

  - wxPGChoices now supports variable height bitmaps.


  Changes (compared to the previous 1.3.x release):

  - Oversized bitmaps are no longer drawn in the property grid
    itself, or in editor control.

  - wxBoolProperty's string representation is now '[not]label'
    instead of 'true/false' when in composite strings. This
    should be more readable.

  - wxPGSpinCtrlEditor class declaration is now available
    in advprops.h.

  - When wxEVT_PG_CHANGING is vetoed, editor control value is
    now updated to reflect unchanged property value - except
    for wxTextCtrl.


  Bugs Fixed (compared to the previous 1.3.x release):

  - HideProperty() did not really work.

  - SpinCtrl editor could crash in some circumstances
    (bug #1948521, fix by alain_d99)

  - Property expander button, for categories that do not have
    visible children, is now hidden.

  - wxTextCtrl excess event detection improved (previously
    some events may have gone unnoticed).

  - Mouse handling and scrolling in wxWidgets SVN trunk (2.9)
    was buggy.

  - Assertion failure if all items were hidden.

  - Switching between alphabetic and categoric mode did not
    recalculate height of the underlying panel (could cause some
    properties remain hidden).



Version 1.3.3 ( Apr-12-2008 )

  New Features (compared to the previous 1.3.x release):

  - Added extra style wxPG_EX_HIDE_PAGE_BUTTONS which allows hiding
    page selector buttons on wxPropertyGridManager toolbar.

  - wxIntProperty, wxUIntProperty and wxFloatProperty now support
    attributes "Min" and "Max" (long, double, and longlong values
    are supported).

  - SpinCtrl editor supports "Step" attribute, which controls how
    much value changes when arrow buttons are pressed.

  - SpinCtrl editor supports "Wrap" attribute, which when set to
    true will cause value to wrap around at "Min" and "Max".

  - SpinCtrl editor supports up, down, pageup and pagedown keys.

  - Added wxPropertyGrid::ChangePropertyValue(), which is similar
    to SetPropertyValue() but also runs validation process and
    sends property change event.


  Changes (compared to the previous 1.3.x release):

  - For true/false values, properties in general now support bools
    in addition to integer ones.

  - Auto unspecified now works on a property basis. Use code
    like this to enable:
       pg->GetProperty(propName)->SetFlag(wxPG_PROP_AUTO_UNSPECIFIED);

  - Added GetProperty() as alias for GetPropertyByName().

  - wxPGProperty::OnSetValue() should now handle all value conversion
    duties. Previously it was job for ValidateValue(), which now is used
    exclusively for validation (ie. they are no longer called in
    SetValue()).

  - wxPGEditor methods SetValueToUnspecified(), SetControlStringValue(),
    and SetControlIntValue() now have additional argument (in first
    position): wxPGProperty*.


  Bugs Fixed (compared to the previous 1.3.x release):

  - wxPG_EX_USES_AUTO_UNSPECIFIED values did not work.

  - SpinCtrl editor did not really work properly as wxSpinButton was
    not initialized right. Now SpinCtrl should work even with
    wxLongLong values.

  - Programmatically Expanding or Collapsing a property (esp. using
    CollapseAll() or ExpandAll()) could crash the application
    (bug #1925821).

  - Fixed various issues with subclassed wxColourProperty. Also
    added sample derived class to propgridsample.cpp.

  - On GTK+, colour property could in some situation trigger
    two colour picker dialogs.

  - wxColourProperty with ComboBox editor did not immediately
    translate custom colour selection to label from colour list.

  - Value entered in wxIntProperty was interpreted as octal
    if there were leading zeroes.

  - WxFileProperty::GetValueAsString() now always returns empty
    string when filename component is empty (bug #1933931).

  - Property expander button did not disappear if all children
    of said property were hidden.

  - wxPropertyGridManager::EnableCategories() did not work.

  - LimitPropertyEditing() method did not affect children.

  - Setting attribute of wxBoolProperty asserted unless it was of
    integer type (bug #1921380, fix by Alex May).

  - wxEnumProperty no longer tries to set string value
    (wxEditEnumProperty still does).



Version 1.3.2 ( Mar-08-2008 )

  NOTES:
    * This version will not work properly with wxWidgets 2.6.x, unless
      wxVariant is patched to have reference counting. See readme in
      directory 'patch_wx26' for details.

  Changes (compared to the previous 1.3.x release):

  - wxPG_EX_TRADITIONAL_VALIDATORS is now default behaviour. Use new
    extra style wxPG_EX_LEGACY_VALIDATORS to revert to wxPG 1.2
    validator usage.

  - PyObjectFromVariant() and related '<<' operator now returns new
    reference (ie. it calls Py_INCREF).

  - wxMultiChoiceProperty now uses wxArrayString as value type.
    You can still acquire list of values by calling
    wxMultiChoiceProperty::GetValueAsArrayInt().

  - Common values are now enabled on a property basis, using
    wxPGProperty::EnableCommonValue(). Anyhow, this is still an
    experimental feature.


  New Features (compared to the previous 1.3.x release):

  - wxMultiChoiceProperty now supports attribute "UserStringMode".
    Default is 0, but if set to 1 or 2, user can enter arbitrary
    strings in addition to those in the list of choices.


  Bugs Fixed (compared to the previous 1.3.x release):

  - Check box editor did not send wxPG_EVT_CHANGING for the initial
    click (fix by Frederico Jerónimo).

  - wxFloatProperty::GetValueAsString() failed if property value was
    unspecified (fix by Frederico Jerónimo).

  - Unspecified value was not set recursively.

  - wxBoolProperty problem with unspecified value.

  - wxEditEnumProperty did not support arbitrary string value (ie.
    had to be one from the list).

  - Aggregate properties as children of aggregate properties did not
    work.

  - wxStringProperty's special "<composed>" value did not work when
    entering new value.

  - Also, "<composed>" was not correctly taken into account when
    wxPG_EVT_CHANGING was sent.

  - Semicolon could be placed incorrectly for composed value if
    nested children.

  - Pressing ESC in text editor did not correctly undo changes and
    unfocus.

  - Ambiguity error when constructing wxEnumProperty with single
    argument.

  - Undefined statement warnings with GCC (bug #1892556).

  - wxSystemColourProperty crashed if created with default value.

  - wxMultiChoiceProperty works better with zero initial choices.

  - wxMultiChoiceProperty's ctor with wxArrayString argument did
    not work properly.

  - HideProperty() was ambiguous.

  - String to colour could assert on bad input.

  - wxColourProperty etc. did not work well with ComboBox editor.

  - SetPropertyReadOnly() did not update children.

  - wxPython bindings: GetClientData() did not correctly increment
    reference count of return value.

  - wxPython bindings: PyObject_to_wxVariant() tried too eagerly
    convert PyObjects to wxColour values.

  - wxPython bindings: refcount problems with PyObjecT* embedded in
    wxVariant should hopefully be fixed.



Version 1.3.1 ( Feb-02-2008 )

  NOTES:
    * This version will not work properly with wxWidgets 2.6.x, unless
      wxVariant is patched to have reference counting. See readme in
      directory 'patch_wx26' for details.
    * Even if you manage to get wxPython bindings to build, note that
      creating custom properties will crash the app.

  Changes (compared to the previous 1.3.x release):

  - Class wxPGPropertyWithChildren has been merged with wxPGProperty.
    This change should be only a minor detail, even to custom property
    developers.

  - As a consequence to above change, wxParentProperty has been
    removed (or, more accurately, is now typedef of wxStringProperty).
    If you need the old displayed value composition behaviour, use
    string wxT("<composed>") as value.

    Now as a rule of thumb, properties which parent is not root
    property or category, are now globally accessible (by name) only
    with 'ParentName.ChildName' notation, where ParentName is name
    of parent property, and ChildName is the name of property given
    in constructor. wxPGProperty::GetName() will return name
    in this format as well, where appropriate.

  - xh_propgrid.h moved to include/wx/propgrid.
    xh_propgrid.cpp moved to src. However, it is still not part of the
    library.


  New Features:

  - Added wxPropertyGridManager::Clear() (removes all pages).


  Bugs Fixed (compared to the previous 1.3.x release):

  - wxPG_PROP_PASSWORD string corrupted when editing
    (bug #1830210).

  - SetPropertyClientData did not work in wxPython (it now accepts
    Python object).

  - wxDEPRECATED was used incorrectly, resulting in compile errors
    on some platforms (thanks Lothar Behrens).

  - GCC 3.4 didn't like wxStaticCast in template (bug #1819862).

  - wxArrayEditorDialog displayed incorrectly on wxMAC (bug #1829215,
    fix by Marianne Gagnon).

  - Improved compilation with wxWidgets SVN trunk (2.9).

  - Some builds did not like #pragma interface/implementation. Removed
    now (thanks roli).

  - Various wxMAC fixes by Julian Smart:
    - Avoid spurious focus within OnIdle.
    - Further reduce dependency on wxClientDC.
    - Allow scrollbar to draw properly in combo box dropdown list.
    - wxPropertyGridManager's grid now looks better (removed border).
    - Fixed appearance of ChoiceAndButtonEditor.
    - Better correct editor position.

  - It was not possible to add properties to wxPropertyGridPage before
    it was inserted into wxPropertyGridManager.

  - wxPropertyGridManager's description caption word-wrapped even though
    it did not expand vertically.

  - manager.h was not self-contained when compiling without pre-compiled
    headers (thanks Ian Britten).

  - Did not compile with wxUSE_VALIDATORS set to 0.

  - wxPG_ITERATE_PROPERTIES incorrectly included children of
    aggregate properties.

  - Configure and shell scripts in source archive were not executable.



Version 1.3.0 ( Oct-11-2007 )

  NOTES: This version will not work properly with wxWidgets 2.6.x, unless
    wxVariant is patched to have reference counting. See readme in
    directory 'patch_wx26' for details.

  New Features (compared to version 1.2.9 release):

  - You can set cell text, bitmap, and colours, of any column of any property
    (including category captions), using wxPropertyGrid::SetPropertyCell().

  - You can now have more than two columns.

  - By enabling "Common Values", you can select a values for properties that
    are common to all. UNDER CONSTRUCTION!

  - Property attribute names are now strings instead of ints. Old attribute
    defines will work however, as they have been properly adjusted. Also,
    arbitrary attributes can now be added to properties.

  - You can specify default values on property-basis by setting "DefaultValue"
    attribute.

  - New event: wxEVT_PG_CHANGING. It is dispatched just before a property value
    is about to change, and can be Veto()ed to abort the change. Pending value
    can be acquired using wxPropertyGridEvent::GetValue().

  - wxPGChoices now supports bitmaps, text colour and background colour. They
    can be set by calling wxPGChoiceEntry::SetBitmap() etc.

  - wxIntProperty now supports and automatically uses wxLongLong, when
    necessary.

  - wxUIntProperty now supports and automatically uses wxULongLong, when
    necessary.

  - wxSpinCtrl editor recognizes property attributes "Min" and "Max".

  - Editors can have multiple buttons (an arbitrary mix of wxButtons and
    wxBitmapButtons is possible).

  - XRC support. You need to link samples/xh_propgrid.cpp with your app.
    Also requires wxWidgets 2.8.0+.

  - Virtual width support. Use wxPropertyGrid::SetVirtualWidth().
    UNDER CONSTRUCTION!

  - GetPropertiesWithFlags() and SetPropertiesFlags() for getting and setting
    specific flag of many properties at once. Useful, eg., for acquiring list
    of all expanded properties. However, using them directly is not necessary
    as utility functions GetExpandedProperties() and SetExpandedProperties()
    have also been added.

  - Added wxPGProperty::GetFullName() (patch #1774780 by Viacheslav Tararin).


  Changes:

  - Various internal changes have been made to reduce library code size,
    simplify creation of user properties, and to have graphics update in
    more consistent manner.

  - wxCode build system is now used.

  - Factory functions are no longer used to instantiate properties.
    Instead, property class names now lack 'Class' and new instances
    are created with 'new' operator. For instance:

    1.2.x:
        pg->Append( wxStringProperty(wxT("Label"), wxT("Name"), wxT("Value")) );

    1.3.0:
        pg->Append( new wxStringProperty(wxT("Label"), wxT("Name"), wxT("Value")) );

    Class bodies of all usable properties are now found in props.h and
    advprops.h.

  - wxVariant is now used internally to store property values.

  - Deprecated 'target' page manipulating functions in wxPropertyGridManager.
    Instead, you should use GetPage() and functions of resulting
    wxPropertyGridPage object. wxPropertyGridManager's methods that
    only affect single page now affect the selected page.

  - wxColour cannot be retrieved using GetPropertyValueAsWxObjectPtr!!!
    (atleast not in wxWidgets 2.8.x).
    Instead use code like this:
       wxVariant variant = pg->GetPropertyValue();
       wxColour colour << variant;

  - wxPGProperty now inherits from wxObject. Also, it is now an abstract class
    (as is wxPGPropetyWithChildren).

  - wxPGId is now a simply a typedef of wxPGProperty*. This means, for instance,
    that to check if "id" is ok, you only need to check if the pointer is not
    NULL.

  - wxAdv library is now a dependency.

  - In wxWidgets 2.8.0 and newer, built-in wxOwnerDrawnComboBox is now used.

  - Setting property value programmatically now updates the editor control, if
    active (bug #1774793).

  - New class wxPGEditorDialogAdapter and virtual wxPGProperty::GetEditorDialog()
    help in using same dialog generation code with properties with different base
    classes.

  - In wxPropertyGridManager, each page tracks its own splitter positions.

  - Wherever possible, GetValue functions return actual type instead of
    reference.

  - Appearance of expand/collapse buttons can be customized by implementing
    wxPropertyGrid::DrawExpanderButton() in a derived class.

  - Intermediate "canvas" wxPanel is used in the wxScrolledWindow. This
    should eliminate pretty much all remaining graphics glitches that
    could occur when resizing the control.

  - Iteration of properties should new be more consistent with somewhat
    STL'ish wxPropertyGridIterator classes.

  - Some item iteration functions replaced with a version that accepts
    iterator flags as argument (for instance, GetLastProperty is now
    GetLastItem, but not all names have changed).

  - wxPGProperty::GetAttributes() now simply returns reference to
    m_attributes member (which of type wxPGAttributeStorage).

  - wxPropertyGrid::GetPropertyValues() can now also return property
    attributes (if flag wxPG_INC_ATTRIBUTES is provided). They are returned
    as list variants with name "@<propname>@attr".

  - New extra style: wxPG_EX_TRADITIONAL_VALIDATORS. When used, validators
    will work with editor controls like they do in wxWidgets itself.

  - wxPropertyGridPopulator has been completely rearranged for maximum
    usability with wxPropertyGridXmlHandler.

  - Removed compactor button and property priority system.

  - Delete() -> DeleteProperty().

  - wxPG_EX_GREY_LABEL_WHEN_DISABLED is always enabled. The actual macro
    define is now zero and deprecated.

  - wxPG_EX_PROCESS_EVENTS_IMMEDIATELY is always enabled. The actual macro
    define is now zero and deprecated.

  - wxPG_INCLUDE_ADVPROPS can now be defined as 0 in project options or
    command-line to exclude "advanced" properties such as wxFontProperty and
    wxCursorProperty from compilation.

  - wxPG_INCLUDE_MANAGER can now be defined as 0 in project options or
    command-line to exclude wxPropertyGridManager from compilation.

  - wxPG_VERSION replaced with wxCode-style version macros (ie. you can
    now use wxCHECK_PROPGRID_VERSION).


  Bugs Fixed:

  - Crash was likely if a property was de-selected when handling event from
    an editor control.


  Changes that are only noticiable when creating user properties:

  - wxPGVariant no longer exists. As a consequence, virtual method DoGetValue
    now returns wxVariant.

  - DoSetValue has been splitted into two new functions:
    bool ValidateValue(wxVariant&) const, which should validate/convert the
    value, and OnSetValue() which can do some value-change related post-
    processing.

  - Virtual SetValueFromString is replaced by StringToValue which does
    not change the value, but just the new one. SetValueFromString()
    still exists as non-virtual setter function.

  - Virtual SetValueFromInt is replaced by StringToValue which does
    not change the value, but just the new one. SetValueFromInt()
    still exists as non-virtual setter function.

  - wxPGPropertyWithChildren::ChildChanged(wxPGProperty* property) has been
    changed to:

    void ChildChanged( wxVariant& thisValue, int childIndex,
                       wxVariant& childValue ) const = 0;

    It is now supposed to modify 'thisValue' instead of m_value and use
    given childValue instead of manually fetching one from the child.

  - wxPGValueType no longer exists. Internal wxVariants and attribute system
    are supposed to replace the missing functionality.

  - wxPGClassInfo no longer exists. wxObject classinfo facilities are
    to be used instead.

  - A completely new custom rendering system. You can use new wxPGProperty
    method GetCellRenderer to return wxPGCellRenderer instance. OnCustomPaint
    will still work, assuming you change GetImageSize correctly (see below).

  - The basic WX_PG_DECLARE_PROPERTY macros are no longer used. Instead,
    now you need to place property class into the header.

  - GetImageSize has been replaced by OnMeasureImage, which is similar except
    it also has "int item" argument (for measuring list items).
    GetImageSize itself is now a deprecated method. Overriding it will cause
    run-time assertion failure.

  - wxPGChoiceInfo now only has wxPGChoices* m_choices member.

  - virtual SetAttribute method removed. bool DoSetAttribute( const wxString& name,
    wxVariant& value ) and wxVariant DoGetAttribute() const
    replace the functionality.

  - In order to support wxEVT_PG_CHANGING, wxPGProperty::OnEvent should now use
    wxPropertyGrid::ValueChangeInEvent(wxVariant& value) to set the value. Doing
    things in the old way (ie. setting m_value directly) should still work,
    however. Note that when you use ValueChangeInEvent, you no longer need to
    change value in editor control (as wxPropertyGrid does this automatically
    for you).

  - Atleast one constructor of property class needs to have default value
    specified for all arguments (you can use wxPG_LABEL for both name and
    label).

  - wx(Base)EnumProperty::m_index is made private. Use GetIndex/SetIndex to
    manipulate it in derived classes.

  - Property flag wxPG_PROP_UNSPECIFIED is no longer used to indicate that
    the property value is unspecified. Instead, Null variant is set as value.

  - WX_PG_DECLARE_PROPERTY_CLASS now requires class name as argument
    (so it is used similar to DECLARE_DYNAMIC_CLASS).

  - WX_PG_DECLARE_EDITOR_CLASS now requires class name as argument
    (so it is used similar to DECLARE_DYNAMIC_CLASS).

  - WX_PG_DECLARE_DERIVED_PROPERTY_CLASS and WX_PG_IMPLEMENT_DERIVED_PROPERTY_CLASS
    macros are deprecated. In new code, use DECLARE_DYNAMIC_CLASS and
    IMPLEMENT_DYNAMIC_CLASS instead.

  - WX_PG_DECLARE_PARENTAL_TYPE_METHODS macro is removed, as
    it would no longer declare any functions.


  Changes that are only noticiable when creating user editors:

  - wxPGEditor::CreateControls now has return value of type wxPGWindowList,
    which is used to return primary and secondary wxWindows. The old writeback
    pointer has naturally been removed from the argument list.

  - wxPGEditor::CreateControls must now use propGrid->GetPanel() as the parent
    for controls instead of plain propGrid. Runtime assertion failure will
    otherwise result.

  - wxPGEditor::DrawValue argument list changed to (dc, rect, property, text).

  - CopyValueFromControl() replaced with GetValueFromControl(), which is supposed
    to return wxVariant value instead of setting it.

  - Control pointer (wxWindow* primary and the kind) passed to property
    methods is now always the actual control instead of clipper window.

  - You can create editors with fixed width by adding following code to
    CreateControls(): propGrid->SetInternalFlag( wxPG_FL_FIXED_WIDTH_EDITOR );



Version 1.2.7 ( Mar-24-2007 )

  New:

  - SetPropertyValue and GetPropertyValue methods for wxLongLong and
    wxULongLong. In addition, added wxLongLongProperty to sampleprops.cpp.

  - Makefiles for wxWidgets 2.8.3.


  Changed:

  - Previously it was possible to create a property with fixed
    children (such as wxFlagsProperty) with no children initially, and then
    populate it afterwards. For improved consistency, this can no longer
    be done in the same way. Instead, you need to call BeginAddChilren just
    prior to starting to add children, and EndAddChildren after populating
    has finished.


  Bugs Fixed:

  - Applied following Mac OS X fixes by Julian Smart:
    * Improved placement of text control editor.
    * Improved placement of editor button.
    * Editor controls were larger than intended.
    * There was flicker on resize.

  - On GTK, toolbar height was incorrect.

  - Fixed regression which caused spinctrl editor on GTK to crash on arrow
    click.

  - Fixed regression which caused Freeze/Thaw to work incorrectly.

  - Makefile.in did not have UNIX line endings.

  - In certain rare conditions, wxPropertyGrid could crash when being created
    (patch #1645322 by rjmyst3).

  - Dialog editor of string properties could not set an empty string
    (patch #1672748 by b_betts).

  - NULL pointers of focus events were not handled correctly
    (patch #1675902 by rjmyst3).

  - wxFlagsProperty with zero children could not be replaced (#bug 1675077).

  - String handling code has been modified for wxWidgets CVS (2.9.0) and STL-
    friendliness.

  - Compile problem with wxWidgets 2.6.1 on wxMSW (patch #1671422 by
    Tim Stahlhut).

  - Compile problem in sample if WXWIN_COMPATIBILITY_2_6 was not used with
    wxWidgets 2.8 (bug #1647725).



Version 1.2.6 ( Jan-21-2007 )

  New:

  - SpinCtrl editor re-implemented using wxTextCtrl in combination with
    wxSpinButton. This should resolve vast majority of SpinCtrl issues.
    As a bonus, SpinCtrl now also works with wxFloatProperty (or any
    property which value as string is a number).

  - Added extra style wxPG_EX_AUTO_UNSPECIFIED_VALUES. When specified,
    it is possible to set some properties to unspecified values by editing
    them. Currently, following properties support this:
      * wxIntProperty, wxUIntProperty, and wxFloatProperty: Clear the
        text field.

  - Added extra style wxPG_EX_PROCESS_EVENTS_IMMEDIATELY. When specified,
    ProcessEvent is used to dispatch wxPropertyGridEvents instead of
    AddPendingEvent.


  Bugs Fixed:

  - Crash when deleting a property with modified, uncommitted value.

  - Compilation problems with wxWidgets 2.8.0.

  - Compilation problem with MingW (bug #1619351).

  - Compilation problem under Mac OS X (bug #1619350).

  - Compilation failed if wxBitmapComboBox was also used (bug #1622884).

  - Compilation problem when not using precompiled headers.

  - Regression where point size and underlined attribute of wxFontProperty
    were not interpreted correctly.

  - Various problems if first page of wxPropertyGridManager was removed
    and re-created (patch #1626581 by rjmyst3).

  - Properties using ComboBox editor and custom painting displayed their
    value string even if it was unspecified.

  - Posix install script had comptibility issues with some non-bash
    compliant shells (bug #1620783).

  - Unable to edit unspecified text properties with clipper window
    (bug #1635432).

  - SetPropertyValue, when called on a child property, did not visibly
    refresh the parent.

  - In rare circumstances, it was possible to "select" last selected
    property of another page by double-clicking.



Version 1.2.5 ( Dec-11-2006 )

  New/Changed:

  - wxPython Bindings: Experimental support for creating custom properties
    and editors. See README-propgrid-wxPython.txt and test_propgrid.py
    for more information (carefully, since there are caveats).

  - Added wxPropertyGridManager::GetDescBoxHeight().

  - Makefiles for wxWidgets 2.8.0.

  - Added support for preprocessor define wxPG_USE_WXMODULE. Default is 1,
    but can be set to 0 inorder not to use wxModule to manage global variables.
    This may be needed in cases where wxPropertyGrid is linked in a plugin
    DLL. (patch #1609769 by Tim Stahlhut)

  - wxPython related source files are now in a separate archive.


  Bugs Fixed:

  - wxGTK, wxMAC: Fixed regression where the control was blank unless extra
    style wxPG_EX_NATIVE_DOUBLE_BUFFERING was defined.

  - wxMSW: Indentation in wxTextCtrl editors was not correct in all
    combinations of font and Windows OS version.

  - Setting value of a wxSystemColourProperty sometimes partially corrupted
    the value (specifically, wxColourPropertyValue::m_type). This was a
    regression caused by a buggy bug fix in 1.2.4.

  - Property's custom text colour was not always applied correctly on the
    value column.

  - "make install" didn't work. Note that the current fix is only a workaround
    (bug #1604887).

  - Compile errors with GCC 4.1 and newer.

  - wxImageFilePropertyClass, wxCursorPropertyClass and
    wxMultiChoicePropertyClass were missing export declaration.



Version 1.2.4 ( Nov-12-2006 )

  New:

  - Added SetPropertyTextColour. It sets text colour of properties and
    their children. Similar to SetPropertyBackgroundColour, it doesn't
    affect the caption colours.

  - Added SetPropertyBackgroundColour as an alias for SetPropertyColour.

  - Added SetCaptionTextColour. It specifically sets (caption) text
    colour of a category property.

  - Headers now identify WXMAKINGLIB_PROPGRID, which must be defined if
    wxPropertyGrid is to be linked statically while wxWidgets itself is
    linked dynamically (ie. WXUSINGDLL is defined)
    (patch #1593682 by Tim Stahlhut).

  - Improved combobox LnF under Windows Vista.

  - wxPython build scripts and readme updated to work with the 2.7 branch.


  Bugs Fixed:

  - Child properties in deep hierarchy were not properly repainted when value of
    one of their parents was updated (bug #1578255).

  - Unspecified value did not work well with SpinCtrl editor.

  - DeletePropertyChoice and InsertPropertyChoice did not adjust the selection
    appropriately. Now, if current selection is deleted, then value is set to
    unspecified.

  - wxPython bindings: Setting string array and int array values didn't work.

  - Setting undefined wxColour value to a wxColourProperty or
    wxSystemColourProperty could cause assertion failure/crash (bug #1593459).

  - Internal global variables class was not correctly destroyed, potentially
    causing problems on app exit. Now this should be fixed by using wxModule.

  - GetCellDisableTextColour -> GetCellDisabledTextColour.

  - Fixed potential infinite focus event recursion scenario with
    wxEditEnumProperty (applied to wxMAC, at least).

  - wxPGCheckBoxEditor, wxParentPropertyClass and wxCustomPropertyClass were
    missing export declaration.

  - Compile problem with wxWidgets 2.7.2.



Version 1.2.3 ( Oct-15-2006 )

  New:

  - Added extra style wxPG_EX_NATIVE_DOUBLE_BUFFERING, which allows wxPropertyGrid
    to rely on system's native double-buffering, and thus conserve some memory
    and improve drawing performance.

  - Added EVT_PG_DOUBLE_CLICK (using event type wxEVT_PG_DOUBLE_CLICK) for
    intercepting double-clicks on properties.


  Bugs Fixed:

  - Spurious property change events when pressing alt or ctrl, or when leaving
    the control area with mouse. This was especially annoying if a validator
    was used.

  - wxFloatProperty could crash with wxUSE_STL = 1 (bug #1561169, fix by Todd).

  - wxPropertyGridManager toolbar height was too small under Windows.



Version 1.2.2 ( Sep-09-2006 )

  New:

  - Extra style wxPG_EX_GREY_LABEL_WHEN_DISABLED added. It causes labels
    to become greyed along with the values when a property becomes disabled.

  - SetCellDisabledTextColour member function added to wxPropertyGrid.

  - Installer may try to automatically run bakefile if installing
    for an "unsupported" wxWidgets version.

  - Windows uninstaller does now much more through job. Namely, temporary
    files (*.obj etc.) and files specific to older wxPropertyGrid releases
    are removed where possible.

  - Unix uninstaller script added (contrib/uninstall-propgrid.sh).

  - wxArrayStringProperty now uses its validator to also validate the value
    in editor dialog (done when ok is pressed). No other properties do this
    currently, but just let me know if you need such thing.

  - Added virtual member function wxArrayEditorDialog::GetTextCtrlValidator.
    Implement it in a derived class to create a wxValidator for the wxTextCtrl
    in dialog.

  - Editor dialog of subclassed wxArrayStringPropertyClass can be changed
    easier - you only need to implement new virtual member function
    CreateEditorDialog() to return new instance of your own editor dialog
    class derived from wxArrayEditorDialog. To facilitiate this there are
    two new virtual functions in wxArrayEditorDialog - SetDialogValue and
    GetDialogValue. At the moment they are not used with any other
    properties.


  Bugs Fixed:

  - Pressing enter in wxEditEnumProperty's editor didn't do anything useful but
    caused focus to be lost from wxPropertyGrid.

  - All wxKeyEvents, specifically those from editor controls, could not be
    intercepted. These events are now also sent to wxPropertyGrid itself,
    meaning they can be intercepted in EVT_KEY_DOWN/UP handlers of derived
    class or pushed wxEvtHandler.

  - Pressing NumLock could cause problems under toolkits based on X. This
    includes, for instance, wxGTK (patch #1554432 by rjmyst3).

  - Compile problem with gcc4.1+ (bug #1540414)

  - Trying to use wxMultiChoiceProperty with wxPGChoices that had values
    not matching string indices did not work.

  - wxPropertyGridManager::CreatePropertyGrid() was not virtual.



Version 1.2.1 ( Aug-12-2006 )

  New:

  - Much improved focus detection.

  - wxDateProperty added to advprops.h/cpp. It uses wxDateTime value type
    and a new DatePickerCtrl editor (altough TextCtrl editor works as well).
    There are two new attributes for it: wxPG_DATE_FORMAT (string - used with
    wxDateTime::Format. Set your locale for nice default value) and
    wxPG_DATE_PICKER_STYLE (long - the window style used when creating
    wxDatePickerCtrl).

    Member functions SetPropertyValue and GetPropertyValueAsDateTime have also
    been added to wxPropertyGrid and wxPropertyGridManager.

  - DatePickerCtrl editor added to advprops.h/cpp. Note that wxDatePickerCtrl
    resides in wxAdv library, so using anything from advprops may cause
    dependency for it. Since I don't want that to happen by default, you will
    need to define wxPG_ALLOW_WXADV somewhere (library project settings or
    top of propgrid.h, for instance).

  - SpinCtrl editor moved from samples to advprops.h/cpp. You need to call
    static member function wxPropertyGrid::RegisterAdditionalEditors()
    prior to using it.

  - Numerous wxASSERTs and wxCHECKs have been added to validate property ids
    and names (among other things).

  - wxPropertyGridEventHandler macro added for use with wxEvtHandler::Connect.

  - Added to readme a note about tar "lone zero block" warning message.


  Bugs Fixed:

  - On systems where wxPopupWindow was used instead of wxTransientPopupWindow
    (includes all systems with wxWidgets 2.6.1 or earlier), there was serious
    dysfunctionality and even crashes in some rare situtations (for instance,
    clicking wxPropertyGridManager toolbar button when a popup was open).

  - wxPython bindings: property help strings did not appear in
    PropertyGridManager's description box.

  - wxPython bindings: there should now be a lot more Python exceptions
    instead of plain crashes when an invalid property name is used.

  - #1521288 (Crash on Tab keypress)

  - When wxPG_EX_HELP_AS_TOOLTIPS extra window style was used, the help
    strings were still shown in the status bar (in addition to that they
    were shown as tooltips).

  - POSIX installer script didn't work if path to wxWidgets was relative.

  - EventObject of wxPropertyGridManager's wxPropertyGridEvents pointed to
    the underlying wxPropertyGrid instead of the main (manager) object.

  - Some inconsistencies in how Doxygen generated the documentation have
    been resolved.



Version 1.2.0 ( Jul-09-2006 )

  Start of a new Stable API branch. In the subsequent 1.2.x releases API will
  not be changed (albeit minor additions can be made) and internal changes not
  related to bug fixes will be kept at minimum.

  New/Changed:

  - Improved appearance when disabled (all text is greyed).

  - Added keyboard shortcut Alt+Down to push the editor button. You can change
    it to a custom shortcut with new member function
    wxPropertyGrid::SetButtonShortcut(keycode,ctrlDown,altDown).

  - wxPropertyGridManager::SelectPage() now supports page index -1 to
    indicate no selection.

  - Ability to subclass wxPropertyGrid and wxPropertyGridManager has been
    improved. See docs for details.

  - Section "Creating New Properties" in the documentation has been
    heavily revised to introduce how to subclass properties as easily
    as possible (ie. macros not necessary).

  - Added wxPG_VERSION macro. It is calculated as MajorVersion*1000 +
    MinorVersion*100 + Release*10 + Subrelease. For instance, version 1.2.0
    translates to 1200.

  - Added wxPropertyGrid::GetPropertyPtr(id/name).

  - wxArrayStringPropertyClass::OnButtonClick is now virtual.


  Bugs Fixed:

  - wxTextValidator didn't work with wxEditEnumProperty.

  - Fixed bug #1511342 (Cannot clear FileProperty when PG_FILE_SHOW_FULL_PATH = 0)

  - Fixed bug #1509826 (Expand buttons drawn in the wrong place)

  - Fixed bug #1510934 (Build fails on gcc 4.1.1)

  - Keyboard navigation with limited editing properties could provoke
    (harmless) assertion failure.

  - Custom wxPropertyGridPage did not trigger events in wxPropertyGridManager
    itself (for instance, property description did not appear when property
    was selected).

  - wxPropertyGrid::GetEditorControl() sometimes crashed with wxGTK.



Version 1.1.6 ( Jun-08-2006 )

  New/Changed:

  - Added attribute wxPG_FILE_DIALOG_TITLE for wxFileProperty. If set,
    the file selector dialog will use it as the title.

  - Added attribute wxPG_DIR_DIALOG_MESSAGE for wxDirProperty. If set,
    the dir selector dialog will use it as the message.

  - Added wxPropertyGridManager::RemovePage(pageIndex).

  - Addex extra window style wxPG_EX_HELP_AS_TOOLTIPS, which will
    display property help strings as tooltips instead of status bar text.
    However, the usual wxWidgets restrictions apply and therefore multiline
    tooltips are not created automatically (ie. line breaks are needed for
    long tips).

  - wxPropertyGridPage class can now be subclassed to create custom manager
    pages. wxPropertyGridManager::AddPage() has new last argument where the
    page instance can be given. Custom pages are mostly useful for handling
    page-specific events, altough some virtual member functions can be
    overridden as well (DoInsert, DoDelete).

  - wxPG_SPLITTER_AUTO_CENTER behaviour has been further tweaked.

  - Unix installer now uses configure's regen script to generate makefiles.
    As of consequence, build dir is now asked even if quick install is used,
    unless the dir is given as the second parameter.


  New Features for Creating User Properties:

  - OnCustomPaint can now be used to paint the entire item (ie. not just
    an image in front of the text, as previously). Requirement is that
    GetImageSize returns wxPG_FULL_CUSTOM_PAINT_SIZE(preferredHeight),
    or for flexible height, wxPG_FULL_CUSTOM_PAINT_FLEXIBLE_SIZE(preferredHeight).
    wxPaintedEnumPropertyClass has been added to the sample application as a
    demonstration how to do this.


  Bugs Fixed:

  - Combobox focus and selection background drawing corrected.

  - Various problems with wxWidgets 2.7.0.

  - GCC 4.0 warning.



Version 1.1.5 ( May-05-2006 )

  New/Changed:

  - Hugely improved wxPG_SPLITTER_AUTO_CENTER behaviour regarding appearing/
    disappearing scrollbar.

  - Text length limiting. Works with any properties using text ctrl as an
    editor. Call wxPropertyGrid::SetPropertyMaxLength or wxPGProperty::
    SetMaxLength.

  - Attributes now work in wxPython (thanks to the wxVariant typemap I added
    to the SWIG interface). See readme of the bindings package for a single
    line example.

  - Property hiding. Use wxPropertyGrid::HideProperty(property,true/false),
    or wxPGProperty::Hide(true/false). NOTE! This overlaps the old priority
    system and cannot be used simultaneously.

  - wxSystemColourProperty: Selecting or setting custom colour from dialog
    no longer tries to find named match from the list of system colours.

  - Added attribute wxPG_FILE_INITIAL_PATH to wxFileProperty. If set, the
    selector dialog will use it as initial path.

  - wxPGChoices id used mainly with wxPropertyGridPopulator has been changed
    from type size_t to custom type wxPGChoicesId (which is currently void*).


  Bugs Fixed:

  - Current colour was not selected in the colour dialog of wxColourProperty and
    its kind (thanks Anthony Sommers).

  - Fixed bug #1467766 (Combobox is set to the wrong value for an empty property)

  - Fixed bug #1467760 (Can't tab from checkbox property on Windows)

  - Applied patch #1467753 by Julian Smart that solves various keyboard navigation
    issues with combo box editor, including:
    * Pressing Enter should not show popup.
    * Pressing Escape should close popup.

  - wxMSW: Pressing enter in list popup didn't select an item.

  - String property using attribute wxPG_STRING_PASSWORD exposed its value
    as plain text instead of asterisk sequence in its parent's summary string.

  - wxPropertyGrid::GetEditorControl() now returns the actual control
    instead of clipper window, if any.

  - Compile problems with 64-bit compilers.

  - Compile problems with wxWidgets 2.7.0.

  - Hopefully now compiles with Cygwin.



Version 1.1.4 ( Mar-22-2006 )

    IMPORTANT! There are changes in custom/user property scheme. See below.

  New/Changed:

  - Internal changes to make wxPython bindings reality.

  - wxWidgets 2.6.3 makefiles are included.

  - wxValidators are now used in a different way for textctrls - validation
    happens on change instead on modify. This prevents user from leaving the
    editor control if entered text is invalid.

  - wxIntProperty and wxFloatProperty now have default numeric wxTextValidators
    attached to them.

  - Added CanClose() method which returns false if value in active editor
    has been invalidated by a wxValidator.

  - ClearSelection and SelectProperty now return false if selection could not
    be changed (which would be the case if editor's validation fails).

  - AddPropertyChoice method now also updates an active editor control.

  - InsertPropertyChoice and DeletePropertyChoice methods.

  - wxPGProperty now has AppendChoice, InsertChoice and DeleteChoice methods.
    They also update active editor control.

  - New attribute: wxPG_FILE_SHOW_RELATIVE_PATH. For wxFileProperty and derivatives.
    Allows showing relative instead of absolute path. Base path is the value given
    for this attribute.

  - Moved the remaining wxPGxxx editor class headers to propdev.h.

  - Sample application is now split into two source files. The new one,
    sampleprops.cpp contains those more useful sample user properties.

  - Dialog positioning and sizer spacing should now be more appropriate with
    Windows CE.

  - wxPG_COMPATIBILITY_1_0_0 is no longer on by default.


  Changes in Creating User Properties and Editors:

  - OnEvent: Instead of calling CopyValueFromControl, method should simply
    return true when changing event was received.

  - Macros WX_PG_IMPLEMENT_STRING_PROPERTY_WITH_VALIDATOR and
    WX_PG_IMPLEMENT_STRING_PROPERTY now require an additional argument
    which can be either wxPG_NO_ESCAPE (no escape sequences, ie. newlines
    and tabs cannot really be used - good for wxDirProperty and such) or
    wxPG_ESCAPE (the classic mode).

  - wxPGEditor::AppendItem(wnd,label) replaced with
    wxPGEditor::InsertItem(wnd,label,index).

  - wxPGEditor::DeleteItem(wnd,index) added.


  Bugs Fixed:

  - wxDirProperty used escape sequences (such as \n and \t), causing dir
    selector dialog to always start from the scratch.

  - Custom delimeter for WX_PG_IMPLEMENT_ARRAYSTRING_PROPERTY_WITH_VALIDATOR
    (including sample wxDirsProperty) did not take effect until the value was
    set outside the constructor.

  - wxPGSpinCtrlEditor (from the sample app) crashed when value was
    entered manually.

  - Property value type builder macro WX_PG_IMPLEMENT_VALUE_TYPE_VOIDP_CVD
    did not work properly. Also added note about needing to use basic
    WX_PG_DECLARE_VALUE_TYPE macro with it.

  - Keyboard navigation did not work in combo popups.

  - Open Watcom problems.

  - GetFirstChild was not available in wxPropertyGridManager.

  - Windows CE popup window problems.



Version 1.1.3 ( Jan-15-2006 )

  New Features:

  - wxPopupTransientWindow now used for wxMSW and wxGTK popups if compiled with
    wxWidgets 2.6.2 or newer. This allows more authentic popup behaviour and
    using mouse input in wxGTK modal dialogs.

  - wxWidgets 2.7.0 makefiles.


  Bugs Fixed:

  - Mouse cursor did not always change to resize-arrow when hovering on the
    splitter.

  - Various bugs with child properties set to have unspecified value (for
    instance, when a property's value is set to unspecified, it's parent's
    "summary" text now correctly reflects this).

  - In ANSI build, it should now be possible to enter any non-ASCII
    characters in editor dialogs of wxLongStringProperty and
    wxArrayStringProperty (thanks Milan Babuskov).

  - Editor dialogs of wxLongStringProperty and wxArrayStringProperty now
    correctly use parent wxPropertyGrid's font.

  - CollapseAll could corrupt the current selection.

  - wxMAC compile problem.

  - wxParentProperty should now work if it initially has no children.



Version 1.1.2 ( Dec-02-2005 )

  New Features:

  - wxPG_BOOL_USE_DOUBLE_CLICK_CYCLING (wxBoolProperty attribute to allow
    value cycling with double-click) has been re-enabled and *is now on by
    the default*. Focusing to the combo box is detected as the first click,
    so behaviour will be much smoother than before.

  - New Attribute: wxPG_COLOUR_ALLOW_CUSTOM. Custom colour choice of
    wxColourProperty, wxSystemColourProperty, and their kind can be disabled
    by setting this attribute to 0.

  - SetPropertyAttributeAll(attrId,attrVal) method allows setting an attribute
    for every single property (in both normal grid and grid manager). Just
    remember to call it *after* your grid has been completely built.


  Bugs Fixed:

  - Size given in constructor or Create did not work.

  - Shorter name for SetPropertyValueUnspecified (ie. SetPropertyUnspecified)
    was not available when v1.0.0 compatibility flag was set (which was the
    default).

  - In some cases wxPropertyGrid stole keyboard focus.

  - Left aligning the splitter (ie. SetSplitterLeft method) has been fine-tuned.

  - It was not possible to have user properties with name not starting
    with "wx".



Version 1.1.1 ( Sep-21-2005 )

  New Features:

  - New property editor: ComboBox. Just like Choice but without
    wxCB_READONLY flag.

  - New property: wxEditEnumProperty. Just like wxEnumProperty, but
    has wxString value and ComboBox as default editor.

  - New method: SetSplitterLeft. Moves splitter as far left as possible
    so that labels are still fully visible. Also, this is the new default
    splitter position when wxPG_SPLITTER_AUTO_CENTER window style is not
    used.

  - New event: EVT_PG_ITEM_COLLAPSED - occurs when property or category
    has been collapsed by the user.

  - New event: EVT_PG_ITEM_EXPANDED - occurs when property or category
    has been expanded by the user.

  - Initial Mac OS X compatibility has been reported (should build and run -
    thanks to Jan-Friso Schipper for working it out).

    NOTE: wxPropertyGrid::SetFont is reported to crash, so offending code in it
    has been commented out. However, if you are willing to debug the issue, you
    can replace line '#if !defined(__WXMAC__)' with line '#if 1' in propgrid.cpp:
    wxPropertyGrid::SetFont.

  - wxWidgets 2.6.2 makefiles.


  Bug Fixes:

  - wxFloatProperty and sample's wxArrayDoubleProperty had problems when
    locale was set to one using comma as decimal point.

  - When value image of property w/ Choice editor was changed (with
    SetPropertyImage method), image appeared in front of every line in
    dropdown, not just the current one.

  - WX_PG_IMPLEMENT_STRING_PROPERTY macro produced erroneous code.

  - SetSplitterPosition did not work  when called before grid's size was
    properly set (by sizer logic etc).

  - SetSplitterPosition was missing from wxPropertyGridManager.



Version 1.1.0 ( Jun-14-2005 )

  Attention, users of 1.0.x! Carefully read section entitled 'API Changes'.

  New Features:

  - When wxPropertyGrid loses focus, selected property now becomes greyed
    (similar to other controls).

  - wxValidator support methods:
        void SetPropertyValidator(id/name,wxValidator&)
        wxValidator* GetPropertyValidator(id/name)

    In addition, wxFileProperty, wxDirProperty (as well as wxDirsProperty
    in the sample app) now have built-in validators to filter out characters
    that cannot be used in paths.

  - Value image of any property can be set:
        void SetPropertyImage(id/name,wxBitmap&)
        wxBitmap* GetPropertyImage(id/name)

  - Editor of any property can be changed:
        void SetPropertyEditor(id/name,const wxPGEditor*)
        const wxPGEditor* GetPropertyEditor(id/name)

  - Property inheritance can now be traced, using IsPropertyKindOf method.
    For example, to find out whether property inherits from wxCustomPropertyClass,
    use:
        pg->IsPropertyKindOf( property, WX_PG_CLASSINFO(wxCustomProperty) )

  - wxStringProperty got wxPG_STRING_PASSWORD attribute. When it is used
    the value is echoed as asterisks and wxTE_PASSWORD is passed to the
    textctrl editor.

  - wxColourProperty (and wxSystemColourProperty) trigger colour dialog on
    wxButton click events (which means that changing the editor to
    wxPG_EDITOR(TextCtrlAndButton) is viable).

  - wxColourProperty's default editor is now now TextCtrlAndButton
    (wxSystemColourProperty still has Choice). To get the old editor, just use
    following code immediately after property has been added:

    pg->SetPropertyEditor(colourProperty,wxPG_EDITOR(Choice))

  - SpinCtrl editor added to the sample app. It is an example of user creatable
    property editor, with plenty of comments. On the third page of sample app
    there is a property "SpinCtrl" using it.

  - Items of wxFlagsProperty can now be changed with SetPropertyChoices.

  - Added documentation section "Customizing Properties (without sub-classing)".

  - WX_PG_IMPLEMENT_STRING_PROPERTY_WITH_VALIDATOR. Identical to
    WX_PG_IMPLEMENT_STRING_PROPERTY except it also declares
    wxValidator* DoGetValidator() const method.

  - WX_PG_IMPLEMENT_ARRAYSTRING_PROPERTY_WITH_VALIDATOR. Identical to
    WX_PG_IMPLEMENT_ARRAYSTRING_PROPERTY except it also declares
    wxValidator* DoGetValidator() const method.


  API Changes:

  - wxEnumProperty and wxFlagsProperty new constructor functions:
        wxEnumProperty(name,label,wxArrayString labels,value)
        wxEnumProperty(name,label,wxArrayString labels, wxArrayInt values, value)

  - wxPGConstants renamed to wxPGChoices. *

  - wxChar* arrays given as argument to wxEnumProperty, wxFlagsProperty,
    WX_PG_IMPLEMENT_CUSTOM_ENUM_PROPERTY, WX_PG_IMPLEMENT_CUSTOM_COLOUR_PROPERTY,
    and WX_PG_IMPLEMENT_CUSTOM_FLAGS_PROPERTY, *must now be NULL terminated*.
    Also, all such constructors and macros no longer have 'itemcount' argument
    (for the obvious reason).

  - Sub-properties (i.e. properties which have parent that is not category or
    root) can no longer be accessed globally by their name. Instead, use
    "<property>.<subproperty>" in place of "<subproperty>".

    For example:
        wxPGId id = pg->GetPropertyByName(wxT("Property.SubProperty"));
    Or:
        wxPGId id = pg->GetPropertyByName(wxT("Property"),wxT("SubProperty"));

    Clarification on sub-property OnChange event handling:
    - For wxParentProperty and wxCustomProperty, events will occur for
      sub-property. For those properties that inherit directly from
      wxPGPropertyWithChildren/wxBaseParentPropertyClass (wxFontProperty,
      wxFlagsProperty, etc), events occur for the main parent property
      only (actually, this has to do whether the children are "private" or not
      - see the attributes).
    - When wxParentProperty or wxCustomProperty's child gets changed, you can
      use wxPropertyGridEvent::GetMainParent to obtain its top non-category
      parent (useful, if you have wxParentProperty as child of another
      wxParentProperty, for example).

  - Manager's default is now to hide Alphabetic/Categoric mode buttons. Use
    new ex-flag wxPG_EX_MODE_BUTTONS to show them.

  - SetPropertyValueUnspecified renamed to SetPropertyUnspecified. *

  - wxRECURSE renamed to wxPG_RECURSE. *

  - wxKEEP_STRUCTURE renamed to wxPG_KEEP_STRUCTURE. *

  - GetPrimaryEditor renamed to GetEditorControl. *

  - Identifiers wxPGCtrlClass, wxCCustomTextCtrl, wxCCustomButton, and
    wxCCustomComboBox have been removed (use wxWindow, wxTextCtrl, wxButton and
    wxOwnerDrawnComboBox instead). *

  - SetPropertyChoicesPrivate renamed to SetPropertyChoicesExclusive.

    * When wxPG_COMPATIBILITY_1_0_0 is defined (which is default - see
    propgrid.h), this change is also implemented in its 1.0.x form.


  Dropped Features:

  - Support for wxWidgets versions earlier than 2.6.0.

  - Non-wxWindow-based custom controls.

  - wxPG_EX_CLASSIC_SPACING (defined to 0 with wxPG_COMPATIBILITY_1_0_0).

  - Double click cycles (wxPG_BOOL_USE_DOUBLE_CLICK_CYCLING) - mostly useless
    feature modeled from .NET version.

  - wxPG_NEW_COLOUR_SCHEME can no longer be used to revert to the old colour
    scheme.


  Other Changes:

  - Pressing ESC when editing value in wxTextCtrl editor cancels any
    changes (in addition to unfocusing the control, as previously).

  - EVT_TEXT (id = wxEVT_COMMAND_TEXT_UPDATED) events are now passed out of
    of wxPropertyGrid. This is useful if you want your app to know when user
    has started editing a property (since wxEVT_PG_CHANGED is sent only
    after changes are committed, ie. enter is pressed or focus changes).

  - GetFirstProperty, GetNextProperty and GetPrevProperty will no longer
    skip wxCustomProperty and wxParentProperty.

  - Unhandled editor button events are redirected to the grid's event handler
    (effectively makes custom editor button callback function obsolete).

  - wxFontProperty's "Face Name" sub-property has been changed to a
    wxEnumProperty (it was wxStringProperty). Drop down will show all
    available font faces.

  - Check box editor no longer receives keyboard focus indicator (if I can
    figure how to add it *only* when getting focus from kbd, then I will do
    that).

  - Added GetEditorControlSecondary which returns editor's button, if any.

  - wxBasePropertyClass is a new alias for wxPGProperty.

  - wxBaseParentPropertyClass is a new alias for wxPGPropertyWithChildren.


  Changes to Property Classes System:

  - WX_PG_IMPLEMENT_PROPERTY_CLASS now has base property argument, inserted
    to second place (i.e. its between property name and value type). Use
    wxBaseProperty when inheriting from wxPGProperty and wxBaseParentProperty
    when inherting from wxPGPropertyWithChildren.

  - Added wxPGProperty::DoGetValidator virtual method. If property does
    not have explicit validator, it is called when property's editor is
    about to be created. See wxPGProperty class reference for implementation
    details.

  - wxPropertyGrid::OnCustomEditorEvent's argument changed from wxEvent&
    to wxCommandEvent& - you need to change casting in any related Connect
    calls to accommodate this.

  - wxPGChoices (old wxPGConstants) has been transformed internally. Due
    to this, properties that need it now hold wxPGChoices m_choices instead
    of wxPGChoices* m_choices. wxPGConstantsUnref macros are no longer necessary
    in destructors.

  - Editor classes wxPGTextCtrlEditor and wxPGChoiceEditor are now available
    for inheritance in propdev.h.

  - wxStringPropertyClass is available for inheritance in propdev.h.

  - Replaced all m_constants members with m_choices.

  - Second argument of wxPGProperty::SetAttribute changed from "wxVariant" to
    "wxVariant&".

  - virtual const wxPGEditor* GetEditorClass () const; replaced with
    virtual const wxPGEditor* DoGetEditorClass () const;
    (since there is now non-virtual wxPGProperty::GetEditorClass)

  - Added wxPGEditor::GetName(). It is auto-generated with macros, and
    will return pointer to editor's name ("TextCtrl" etc).

  - Added wxPGEditor::OnFocus(). It is triggered when editor gets focus.
    For wxTextCtrl based editor, for example, it should select all text.

  - Old WX_PG_DECLARE_EDITOR_CLASS (which declares editor singleton
    *in header*) has been renamed to WX_PG_DECLARE_EDITOR.

  - WX_PG_IMPLEMENT_EDITOR_CLASS_CONSTFUNC renamed to
    WX_PG_IMPLEMENT_EDITOR_CLASS.

  - WX_PG_DECLARE_EDITOR_CLASS added - use it as you would DECLARE_DYNAMIC_CLASS.


  Bug Fixes:

  - wxUIntProperty did not render its value unless base or prefix was
    explicitly set (via SetPropertyAttribute).

  - WinXP/Win2K, wxWidgets 2.6.1: Improved indentation fix.

  - When mouse was leaving "slowly" via right edge through active editor
    control, correct mouse leave event was not triggered resulting in
    latest changes not being committed (though there was error notification
    in debug build).

  - GetCaptionBackgroundColour function name had typo (g was missing).



Version 1.0.5 ( Jun-06-2005 )

  See CHANGES-propgrid.txt of versions earlier than 1.1.3.



Version 0.9.9.2 and earlier

  See CHANGES-propgrid.txt of versions earlier than 1.1.0.
