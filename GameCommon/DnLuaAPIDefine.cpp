#include "StdAfx.h"
#include "DnLuaAPIDefine.h"

#ifdef _DEBUG
#define new new(_NORMAL_BLOCK,__FILE__,__LINE__)
#endif

const char *g_szLuaAPIList[] = {

	// LOG
	"api_log_AddLog",
	"api_log_UserLog",

	// NPC
	"api_npc_NextTalk",
	"api_npc_NextScript",
	"api_npc_SetParamString",
	"api_npc_SetParamInt",
	"api_npc_GetNpcIndex",
	"api_quest_GetUserQuestInvenBlankCount",
	"api_npc_AddFavorPoint",
	"api_npc_AddMalicePoint",
	"api_npc_GetFavorPoint",
	"api_npc_GetMalicePoint",
	"api_npc_GetFavorPercent",
	"api_npc_GetMalicePercent",
	"api_npc_CheckSecondarySkill",
	"api_npc_SendSelectedPresent",
	"api_npc_Rage",
	"api_npc_Disappoint",
	"api_npc_CreateSecondarySkill",

	// QUEST
	"api_quest_DumpQuest",
	"api_quest_AddHuntingQuest",
	"api_quest_AddQuest",
	"api_quest_UserHasQuest",
	"api_quest_GetPlayingQuestCnt",
	"api_quest_CompleteQuest",
	"api_quest_MarkingCompleteQuest",
	"api_quest_IsMarkingCompleteQuest",
	"api_quest_SetQuestStepAndJournalStep",
	"api_quest_SetQuestStep",
	"api_quest_GetQuestStep",
	"api_quest_SetJournalStep",
	"api_quest_GetJournalStep",
	"api_quest_SetQuestMemo", 
	"api_quest_GetQuestMemo", 
	"api_quest_SetCountingInfo",
	"api_quest_ClearCountingInfo",
	"api_quest_IsAllCompleteCounting",
	"api_quest_CancelQuest",
	"api_quest_AddSymbolItem",
	"api_quest_DelSymbolItem",
	"api_quest_HasSymbolItem",
	"api_quest_CheckQuestInvenForAddItem", 
	"api_quest_CheckQuestInvenForAddItemList", 
	"api_quest_AddQuestItem",
	"api_quest_DelQuestItem",
	"api_quest_AllDelQuestItem",
	"api_quest_HasQuestItem",
	"api_quest_RewardQuestUser",
	"api_quest_IncQuestMemo",
	"api_quest_DecQuestMemo",
	"api_quest_IncCounting",
	"api_quest_IsPlayingQuestMaximum",
	"api_quest_ForceCompleteQuest",
	"api_quest_ResetSkill",
	"api_quest_GetWorldEventStep",
	"api_quest_GetWorldEventCount",	
	"api_quest_ReturnItemToNpc",
	"api_quest_OpenScoreWorldEvent",
	"api_quest_OpenFarmAreaList",
#if defined( PRE_DRAGONBUFF )
	"api_quest_WorldBuffCheck",
	"api_quest_ApplyWorldBuff",
#endif

	// USER
	"api_user_CheckInvenForAddItem", 
	"api_user_CheckInvenForAddItemList", 
	"api_user_AddItem",
	"api_user_DelItem",
	"api_user_AllDelItem",
	"api_user_HasItem",
	"api_user_GetUserClassID",
	"api_user_GetUserJobID",
	"api_user_GetUserLevel",
	"api_user_GetUserInvenBlankCount",
	"api_user_AddExp",
	"api_user_AddCoin",
	"api_user_PlayCutScene",
	"api_user_UserMessage",
	"api_user_ChangeChannel",
	"api_user_ChangeMap",
	"api_user_RequestEnterPVP",
	"api_user_GetPartymemberCount",
	"api_user_IsPartymember",
	"api_user_SetUserJobID",
	"api_user_IsJobInSameLine",
	"api_user_HasCashItem",
	"api_user_HasCashItemEquip",
	"api_user_ChangePos",
	"api_user_ResetSkill",
	"api_user_SetSecondJobSkill",
	"api_user_GetStageConstructionLevel",
	"api_user_GetMapIndex",
	"api_user_GetLastStageClearRank",
	"api_user_EnoughCoin",
	"api_user_GetCoin",
	"api_user_DelCoin",
	"api_user_IsMissionGained",
	"api_user_IsMissionAchieved",
	"api_user_HasItemWarehouse",
	"api_user_HasItemEquip",
	"api_user_ClearSecondJobSkill",
	"api_user_GetPCCafe",
	"api_user_SetPCCafeItem",
	"api_user_RepairItem",
	
	// UI
	"api_ui_OpenShop",
	"api_ui_OpenSkillShop",
	"api_ui_OpenMarket",
	"api_ui_OpenCompoundEmblem",
	"api_ui_OpenUpgradeJewel",
	"api_ui_OpenMailBox",
	"api_ui_OpenWareHouse",
	"api_ui_OpenDisjointItem",
	"api_ui_OpenUpgradeItem",
	"api_ui_OpenCompoundItem",
	"api_ui_OpenCompound2Item",
	"api_ui_OpenCashShop",
	"api_ui_OpenGuildMgrBox",
	"api_ui_OpenGacha_JP"
	"api_ui_OpenGiveNpcPresent",
	"api_ui_OpenDarkLairRankBoard",
	"api_ui_OpenPvPLadderRankBoard",
	"api_ui_OpenGlyphLift",
	"api_ui_OpenQuestReward",
	"api_ui_OpenGuildCreate",
	"api_ui_OpenGuildWareHouse",
	"api_ui_OpenGacha_JP",
	"api_ui_OpenMovieBrowser",
	"api_ui_OpenGiveNpcPresent",
	"api_ui_OpenBrowser",
	"api_ui_OpenFarmWareHouse",
	"api_ui_OpenDonation",
	"api_ui_OpenInventory",
	"api_ui_OpenExchangeEnchant",
	"api_ui_OpenCostumeRandomMix",
#ifdef PRE_ADD_OPEN_QUEST_TEXTURE_DIALOG
	"api_ui_OpenTextureDialog",
	"api_ui_CloseTextureDialog",
#endif
#ifdef PRE_ADD_DWC
	"api_ui_OpenCreateDwcTeamDlg",
#endif
	//rlkt_TEST
	"api_trigger_CheckJobChangeProcess",
	"api_ui_OpenJobChange",
		/*
		
		rlkt_TEST
		"api_ui_OpenGrowFairyDlg"
		"api_ui_OpenWarpListDlg"
		"api_ui_OpenJobChange"
		"api_user_SetTempJobSkill"
		"api_user_ClearTempJobSkill"
		"api_trigger_CheckJobChangeProcess"
		"api_ui_OpenAllStarBattleRankBoard"
		"api_ui_OpenFishingRankingBoard"
		"api_ui_OpenWarpinSpaDlg"
		"api_ui_Open_FishRankingReward"
		"api_ui_OpenMonsterBattleRankBoard"
		"api_ui_OpenGuildNestRankingBoard"
		"api_ui_OpenCloneCostumeDlg"
		*/


	// GUILD
	"api_guild_GetGuildMemberRole",
	"api_guild_HasGuildWare",
	

	// GUILDWAR
	"api_guildwar_IsPreparation",
	"api_guildwar_GetStep",
	"api_guildwar_GetTrialCurrentState",
	"api_guildWar_GetTrialStats",
	"api_guildWar_GetMatchList",
	"api_guildWar_GetPopularityVote",	
	"api_guildWar_GetFinalProgress",


	// TRIGGER
	"api_trigger_GetPartyCount",	// -- 여기서 부터 트리거
	"api_trigger_GetPartyActor",
	"api_trigger_IsInsidePlayerToEventArea",
	"api_trigger_SetActionToProp",
	"api_trigger_ShowDungeonClear",
	"api_trigger_SetPermitGate",
	"api_trigger_GetMonsterAreaLiveCount",
	"api_trigger_RebirthMonster",
	"api_trigger_GenerationMonster",
	"api_trigger_GenerationMonsterGroup",
	"api_trigger_CmdMoveMonster",
	"api_trigger_CmdRandMoveMonster",
	"api_trigger_CheckMonsterIsInsideArea",
	"api_trigger_CheckMonsterLessHP",
	"api_trigger_GenerationNpc",
	"api_trigger_DestroyNpc",
	"api_trigger_FadeBGM",
	"api_trigger_SetGameSpeed",
	"api_trigger_ShowProp",
	"api_trigger_IsAllDieMonster",
	"api_trigger_GetLastAimPropHandle",
	"api_trigger_IsBrokenProp",
	"api_trigger_IsProp",
	"api_trigger_DestroyMonsterArea",
	"api_trigger_DestroyAllMonster",
	"api_trigger_SetMonsterAIState",
	"api_trigger_PlayCutSceneByTrigger",
	"api_trigger_GetGameTime",
	"api_trigger_Delay",
	"api_trigger_PlaySound",
	"api_trigger_GetBattleModeCount",
	"api_trigger_GetActionToProp",
	"api_trigger_OpenTextureDialog",
	"api_trigger_OpenTextureDialogEx",
	"api_trigger_CloseTextureDialog",
	"api_trigger_CloseAllTextureDialog",
	"api_trigger_OpenAlarmDialog",
	"api_trigger_OpenAlarmDialogEx",
	"api_trigger_OpenCountDownAlarmDialogEx",
	"api_trigger_CloseAlarmDialog",
	"api_trigger_CloseAllAlarmDialog",
	"api_trigger_ChangeMapByTrigger",
	"api_trigger_BeginCountDown",
	"api_trigger_BeginCountDownEx",
	"api_trigger_EndCountDown",
	"api_trigger_GetTalkNpcClassID",
	"api_trigger_GetTalkNpcActor",
	"api_trigger_GetTalkNpcTargetActor",
	"api_trigger_EnableOperatorProp",
	"api_trigger_AllUserEnableOperatorProp",
	"api_trigger_GetLastAimPropActor",
	"api_trigger_GetLastBrokenPropActor",
	"api_trigger_SetActionToPropActor",
	"api_trigger_EnableTriggerElement",
	"api_trigger_EnableMonsterNoDamage",
	"api_trigger_SetActionToActor",
	"api_trigger_EnableOperatorNpc",
	"api_trigger_EnableTriggerObject",
	"api_trigger_ShowNotifyArrowByEventArea",
	"api_trigger_ShowNotifyArrowByProp",
	"api_trigger_HideNotifyArrow",
	"api_trigger_WarpActor",
	"api_trigger_WarpActorFromEventArea",
	"api_trigger_InsidePropToEventArea",
	"api_trigger_ChangeTeamFromEventArea",
	"api_trigger_ChangeBGM",
	"api_trigger_ChangeMyBGM",
	"api_trigger_FileTableBGMOff",
	"api_trigger_IsDieActor",
	"api_trigger_GetUserLevelByTrigger",
	"api_trigger_ChangeEnviVolume",
	"api_trigger_GetMonsterActorFromEventArea",
	"api_trigger_DropItemToEventArea",
	"api_trigger_DropItemToActor",
	"api_trigger_ShowChatBalloonToMonsterArea",
	"api_trigger_ShowChatBalloonToActor",
	"api_trigger_ShowChatBalloonToProp",
	"api_trigger_HideChatBalloonToMonsterArea",
	"api_trigger_HideChatBalloonToProp",
	"api_trigger_SetForceAggroToMonsterArea",
	"api_trigger_SetForceAggroToProp",
	"api_trigger_ShowExposureInfo",
	"api_trigger_GenerationMonsterSet",
	"api_trigger_CameraWork1",
	"api_trigger_CameraWork2",
	"api_trigger_CameraWork3",
	"api_trigger_AddCameraEffect_Quake",
	"api_trigger_AddCameraEffect_DepthOfField",
	"api_trigger_AddCameraEffect_RadialBlur",
	"api_trigger_GenerationMonsterSetInEventArea",
	"api_trigger_DLChangeRound",
	"api_trigger_DLGetRound",
	"api_trigger_DLGetTotalRound",
	"api_trigger_DLGetStartFloor",
	"api_trigger_DLRequestChallenge",
	"api_trigger_DLResponseChallenge",
	"api_trigger_DLSetStartRound",
	"api_trigger_OpenBlind",
	"api_trigger_CloseBlind",
	"api_trigger_ShowBlindCaption",
	"api_trigger_EnableDungeonClearWarpQuestFlag",
	"api_trigger_FadeScreen",
	"api_trigger_ChangeEnvironment",
	"api_trigger_IsExistNotAchieveMissionPartyActor",
	"api_trigger_GetChangeActionPlayerActor",
	"api_trigger_GetActionToPlayerActor",
	"api_trigger_EnablePropNoDamage",
	"api_trigger_GetTriggerEventSignalEventAreaHandle",
	"api_trigger_GetTriggerEventSignalActorHandle",
	"api_trigger_GetTriggerEventSignalEventID",
	"api_trigger_GetTriggerEventSignalTeam",
	"api_trigger_GetMonsterAreaTotalCount",
	"api_trigger_HoldPartyDice",
	"api_trigger_ReleasePartyDice",
	"api_trigger_UpdateNestTryCount",
	"api_trigger_UpdateUserNestTryCount",
	"api_trigger_GetMonsterClassID",
	"api_trigger_EnableDungeonClearWarpAlarm",
	"api_trigger_InitializeMODDialog",
	"api_trigger_LinkMODValue",
	"api_trigger_LinkMODPartsValue",
	"api_trigger_ShowMODDialog",
	"api_trigger_SetHPFromEventArea",
	"api_trigger_SetHP",
	"api_trigger_AddHPAbsoluteFromEventArea",
	"api_trigger_AddHPRatioFromEventArea",
	"api_trigger_AddHPAbsolute",
	"api_trigger_AddHPRatio",
	"api_trigger_GetTeamFromEventArea",
	"api_trigger_GetTeam",
	"api_trigger_GetMonsterActorFromEventArea",
	"api_trigger_ShowBossAlertDialog",
	"api_trigger_SetHPRatioFromEventArea",
	"api_trigger_SetHPRatio",
	"api_trigger_GetPropDurability",
	"api_trigger_LastAimPropActorMessage", 
	"api_trigger_BuffFromEventArea", 
	"api_trigger_NoDuplicateBuffFromEventArea",
	"api_trigger_ActorBuffFromEventArea",
	"api_trigger_Start_DragonNest",
	"api_trigger_SetUsableRebirthCoin",
	"api_trigger_GetMonsterHPPercent_FromEventArea",
	"api_trigger_UseSkillFromEventArea",
	"api_trigger_UseSkill",
	"api_trigger_NotUseManaSkill",
	"api_trigger_AllUser_AddVehicleItem",
	"api_trigger_PlayerNameShowBlindCaption",
	"api_trigger_InvenToEquip",
	"api_trigger_UnRideVehicle",
	"api_trigger_RadioMsg",
	"api_trigger_RadioImage",
	"api_trigger_GetPvPGameModePlayTime",
	"api_trigger_DropGroupItemToEventArea",
	"api_trigger_DropGroupItemToActor",
	"api_trigger_TargetActorShowNpc",
	"api_trigger_TargetActorShowProp",
	"api_trigger_TriggerVariableTable",
	"api_trigger_MyObseverInEventArea",
	"api_trigger_MyObseverEventAreaMove",
	"api_trigger_BattleBGMToggle",
	"api_trigger_GetPvPGameMode",
	"api_trigger_CmdKeepOperationProp",
	"api_trigger_ActivateMission",
	"api_trigger_SetDungeonClearRound",
	"api_trigger_BreakIntoUserCheck",
	"api_trigger_DungeonStartTimeAttack",
	"api_trigger_DungeonCheckTimeAttack",
	"api_trigger_DungeonStopTimeAttack",
	"api_trigger_RequestDungeonFail",
	"api_trigger_Select_RebirthItem",
	"api_trigger_console_WriteLine",
	"api_trigger_GetPartyCountbyRoom",
	"api_trigger_GetPartyActorbyRoom",
	"api_trigger_GetRacingStartTime",
	"api_trigger_GetRacingGoalTime",
	"api_trigger_GetCurrentWeather",
	"api_trigger_StartDungeonGateTime",
	"api_trigger_EndDungeonGateTime",
#if defined(PRE_ADD_62072)
	"api_trigger_StageRemainClearCount",
#endif
	"api_trigger_EnableRideVehicle",
	"api_trigger_AllMonsterUseSkill",
	"api_trigger_HurryUpTime",
	"api_trigger_DungeonClear_AddReward",
	//Environment
#if defined(PRE_ADD_CHALLENGE_DARKLAIR)
	"api_env_CheckCloseGateByTime",
#endif
#ifdef PRE_ADD_MONSTER_PARTS_UI_TRIGGER
	"api_trigger_GetMonsterParts",
#endif
#ifdef PRE_ADD_ALTHEIA_NEWCAPTION_TRIGGER
	"api_trigger_OpenImageBlind",
	"api_trigger_CloseImageBlind",
	"api_trigger_ShowCationImageBlind",
	"api_trigger_ShowNPCImageBlind",
#endif
	"api_trigger_RequireTotalComboCount",
	"api_trigger_RequireTotalComboReset",
	"api_trigger_GetPartyInClassCount",
	"api_trigger_DungeonSynchroDialog",
#ifdef PRE_ADD_PART_SWAP_RESTRICT_TRIGGER	
	"api_trigger_PartSwapRestrict",
#endif
	"api_trigger_Set_AlteiaWorld",
	"api_tirgger_Set_UserHPSP",
	"api_trigger_ShowAlteaBoard",
	"api_trigger_ShowAlteaClear",
	"api_trigger_DisableReturnVillage",

#ifdef PRE_ADD_FADE_TRIGGER
	"api_trigger_ShowFadeScreenCaption",
#endif // PRE_ADD_FADE_TRIGGER
	"api_trigger_Set_ItemUseCount",
	"api_trigger_Emergence_GetValue", //rlkt_placeholder
	"api_trigger_Emergence_Begin",
	"api_trigger_Emergence_CheckSelectedEvent",
	NULL,
};

int api_Identity() { 
	return 1; 
}


void DefineLuaAPI( lua_State *pState )
{
	for( int i=0;; i++ ) {
		if( g_szLuaAPIList[i] == NULL ) break;
		lua_tinker::def( pState, g_szLuaAPIList[i], &api_Identity );
	}
}
