/* soapClient.cpp
   Generated by gSOAP 2.8.2 from Init.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#include "Stdafx.h"

#if defined (_SG) && !defined(PRE_MOD_SG_WITH_MACADDR)

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.2 2011-05-12 12:24:53 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__Authenticate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__Authenticate *ns3__Authenticate, _ns3__AuthenticateResponse *ns3__AuthenticateResponse)
{	struct __ns5__Authenticate soap_tmp___ns5__Authenticate;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.240:22011/";
	if (!soap_action)
		soap_action = "http://ac.cherrycredits.com/IGameAuthentication/Authenticate";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__Authenticate.ns3__Authenticate = ns3__Authenticate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__Authenticate(soap, &soap_tmp___ns5__Authenticate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__Authenticate(soap, &soap_tmp___ns5__Authenticate, "-ns5:Authenticate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__Authenticate(soap, &soap_tmp___ns5__Authenticate, "-ns5:Authenticate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__AuthenticateResponse)
		return soap_closesock(soap);
	ns3__AuthenticateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__AuthenticateResponse->soap_get(soap, "ns3:AuthenticateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__CreateAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__CreateAccount *ns3__CreateAccount, _ns3__CreateAccountResponse *ns3__CreateAccountResponse)
{	struct __ns5__CreateAccount soap_tmp___ns5__CreateAccount;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.240:22011/";
	if (!soap_action)
		soap_action = "http://ac.cherrycredits.com/IGameAuthentication/CreateAccount";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__CreateAccount.ns3__CreateAccount = ns3__CreateAccount;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__CreateAccount(soap, &soap_tmp___ns5__CreateAccount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__CreateAccount(soap, &soap_tmp___ns5__CreateAccount, "-ns5:CreateAccount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__CreateAccount(soap, &soap_tmp___ns5__CreateAccount, "-ns5:CreateAccount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__CreateAccountResponse)
		return soap_closesock(soap);
	ns3__CreateAccountResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateAccountResponse->soap_get(soap, "ns3:CreateAccountResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__Authenticate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__Authenticate *ns3__Authenticate, _ns3__AuthenticateResponse *ns3__AuthenticateResponse)
{	struct __ns6__Authenticate soap_tmp___ns6__Authenticate;
	if (!soap_endpoint)
		soap_endpoint = "net.tcp://192.168.1.240:21011/";
	if (!soap_action)
		soap_action = "http://ac.cherrycredits.com/IGameAuthentication/Authenticate";
	soap->encodingStyle = NULL;
	soap_tmp___ns6__Authenticate.ns3__Authenticate = ns3__Authenticate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns6__Authenticate(soap, &soap_tmp___ns6__Authenticate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns6__Authenticate(soap, &soap_tmp___ns6__Authenticate, "-ns6:Authenticate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns6__Authenticate(soap, &soap_tmp___ns6__Authenticate, "-ns6:Authenticate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__AuthenticateResponse)
		return soap_closesock(soap);
	ns3__AuthenticateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__AuthenticateResponse->soap_get(soap, "ns3:AuthenticateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__CreateAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__CreateAccount *ns3__CreateAccount, _ns3__CreateAccountResponse *ns3__CreateAccountResponse)
{	struct __ns6__CreateAccount soap_tmp___ns6__CreateAccount;
	if (!soap_endpoint)
		soap_endpoint = "net.tcp://192.168.1.240:21011/";
	if (!soap_action)
		soap_action = "http://ac.cherrycredits.com/IGameAuthentication/CreateAccount";
	soap->encodingStyle = NULL;
	soap_tmp___ns6__CreateAccount.ns3__CreateAccount = ns3__CreateAccount;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns6__CreateAccount(soap, &soap_tmp___ns6__CreateAccount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns6__CreateAccount(soap, &soap_tmp___ns6__CreateAccount, "-ns6:CreateAccount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns6__CreateAccount(soap, &soap_tmp___ns6__CreateAccount, "-ns6:CreateAccount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__CreateAccountResponse)
		return soap_closesock(soap);
	ns3__CreateAccountResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateAccountResponse->soap_get(soap, "ns3:CreateAccountResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

#endif		//#if defined (_SG) && !defined(PRE_MOD_SG_WITH_MACADDR)
/* End of soapClient.cpp */
